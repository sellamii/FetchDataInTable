//
// Forms
// --------------------------------------------------

// Variable
// --------------------------------------------------

// Mixin
// --------------------------------------------------
@mixin form-text {
  display: block;
  width: 100%;
  height: $input-height;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  line-height: $input-line-height;
  color: $input-color;
  background-color: $input-bg;
  background-clip: padding-box;
  border: $input-border-width solid $input-border-color;

  // Note: This has no effect on <select>s in some browsers, due to the limited stylability of `<select>`s in CSS.
  @if $enable-rounded {
    // Manually use the if/else instead of the mixin to account for iOS override
    border-radius: $input-border-radius;
  } @else {
    // Otherwise undo the iOS default
    border-radius: 0;
  }

  @include box-shadow($input-box-shadow);
  @include transition($input-transition);

  // Unstyle the caret on `<select>`s in IE10+.
  &::-ms-expand {
    background-color: transparent;
    border: 0;
  }

  // Customize the `:focus` state to imitate native WebKit styles.
  @include form-control-focus();

  // Placeholder
  &::placeholder {
    color: $input-placeholder-color;
    // Override Firefox's unusual default opacity; see https://github.com/twbs/bootstrap/pull/11526.
    opacity: 1;
  }

  // Disabled and read-only inputs
  //
  // HTML5 says that controls under a fieldset > legend:first-child won't be
  // disabled if the fieldset is disabled. Due to implementation difficulty, we
  // don't honor that edge case; we style them as disabled anyway.
  &:disabled,
  &[readonly] {
    background-color: $input-disabled-bg;
    // iOS fix for unreadable disabled content; see https://github.com/twbs/bootstrap/issues/11655.
    opacity: 1;
  }

  &.invalid.error {
    border-color: $form-feedback-invalid-color;
  }
}

// Making
// --------------------------------------------------

input.form-text {
  @include form-text;
}

.hs-form {

  .field,
  .inputs-list {
    margin-bottom: $form-group-margin-bottom;
  }

  input[type="email"],
  input[type="number"],
  input[type="tel"],
  input[type="text"],
  input[type="time"],
  input.form-text {
    @include form-text;
  }

  .hs-error-msgs {
    margin: 0;
    padding: 0;
    @include list-unstyled;

    li {
      margin-top: $form-feedback-margin-top;
      &:first-child {
        margin-top: 0;
      }
    }
    label {
      width: 100%;
      margin: 0;
      font-size: $form-feedback-font-size;
      color: $form-feedback-invalid-color;
    }
  }

  .inputs-list {
    @include list-unstyled;
  }

  // Checkboxes and radios
  //
  // Indent the labels to position radios/checkboxes as hanging controls.

  .hs-form-booleancheckbox-display {
    display: block;
    font-size: rem(12px);
    font-weight: $CONST-FONT-WEIGHT-BOLD;
    line-height: rem(18px);
    margin-bottom: 0;
    margin-top: $form-feedback-margin-top;
    padding-left: $form-check-input-gutter;
    position: relative;

    &:first-child {
      margin-top: 0;
    }

    .hs-input {
      position: absolute;
      margin-top: $form-check-input-margin-y;
      margin-left: -$form-check-input-gutter;

      &:disabled + span {
        color: $text-muted;
      }
    }
  }

  .hs-button {
    display: inline-block;
    font-weight: $btn-font-weight;
    text-align: center;
    white-space: nowrap;
    vertical-align: middle;
    user-select: none;
    border: $btn-border-width solid transparent;
    @include button-size($btn-padding-y, $btn-padding-x, $font-size-base, $btn-line-height, $btn-border-radius);
    @include transition($btn-transition);

    // Share hover and focus styles
    @include hover-focus {
      text-decoration: none;
    }

    &:focus,
    &.focus {
      outline: 0;
      box-shadow: $btn-focus-box-shadow;
    }

    // Disabled comes first so active can properly restyle
    &.disabled,
    &:disabled {
      opacity: $btn-disabled-opacity;
      @include box-shadow(none);
    }

    // Opinionated: add "hand" cursor to non-disabled .btn elements
    &:not(:disabled):not(.disabled) {
      cursor: pointer;
    }

    &:not(:disabled):not(.disabled):active,
    &:not(:disabled):not(.disabled).active {
      @include box-shadow($btn-active-box-shadow);

      &:focus {
        @include box-shadow($btn-focus-box-shadow, $btn-active-box-shadow);
      }
    }
  }

  .hs-button.primary {
    @include button-variant($pink, $pink);
    @include button-size($btn-padding-y-lg, $btn-padding-x-lg, $font-size-lg, $btn-line-height-lg, $btn-border-radius-lg);
    width: 100%;
  }

  .hs_error_rollup {
    margin: $CONST-BASE-UNIT 0;
  }

}